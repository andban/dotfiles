[user]
  useConfigOnly = true

[user "github"]
	name = Andreas Bannach
	email = github@borntohula.de
	signingkey = 80C795CBB17B29FB

[user "bitbucket"]
  name = Andreas Bannach
  email = andreas@borntohula.de


[color]
  # use color when supported
  ui = auto


[core]
  # don't page if contents fit on screen (also keeps content on screen if it does)
  pager = less -FX

  editor = vim
  excludesfile = ~/.gitignore_global
  whitespace = -trailing-space


[alias]
  # remove tracking of references removed on remote
  prune = fetch --prune

  # reset last commit
  undo = reset --soft HEAD^

  # stash ALL changes
  stash-all = stash save --include-untracked

  # set identity for current repository
  identity = "! git config user.name \"$(git config user.$1.name)\"; git config user.email \"$(git config user.$1.email)\"; git config user.signingkey \"$(git config user.$1.signingkey)\"; :"

  # show local commits
  local = "!git log @{push}.."

  # reword last commit message
  reword = commit --amend

  # update last commit with staged files
  amend = commit --amend --no-edit

  # show list of all aliases
#  aliases = "!git config --get-regexp alias | sed -e 's/alias\\\.(\\\S*)\\\s(.*)$/\\\1 = \\\2/g'"
  aliases = "!git config --get-regexp alias |sed -e 's/^alias\\.\\([^[:space:]]*\\)/\\1 =/g'"

  log-full = log --graph --pretty=tformat:'%Cred%h%Creset - %Cgreen(%cD) %C(bold blue)%an <%ae>%Creset %n%w(78,2,2)%s %n%w(70,4,4)%b'

[push]
  # always push local branch into the upstream branch of the same name
  default = simple

  # always push new tags
  followTags = true


[pull]
  # rebase and keep local merge commits
  rebase = merges


[log]
  # show only mgmt summary of hashes
  abbrevCommit = true

  # follow single file history across renames
  follow = true

  # don't add any ref names to commits
  decorate = false


[format]
  # make it pretty see (https://git-scm.com/docs/git-log#_pretty_formats)
  pretty = %Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset
  graph = true


[grep]
  break = true
  heading = true
  lineNumber = true
  extendedRegexp = true


[merge]
  # only allow fast-forward merges (those without merge commit)
  ff = only

  # show common ancestors in conflict
  conflictstyle = diff3

  tool = vimdiff
  guitool = vscode

[mergetool]
  # clean backup files generated by mergetool
  keepBackup = false

  # clean temp files generated by mergetool
  keepTemporaries = false

  # write temp files into a temp directory
  writeToTemp = true

  prompt = false

[mergetool "vscode"]
  cmd = code --wait $MERGED


[diff]
  tool = vimdiff
  guitool = vscode
  # use (c)ommit, (i)ndex, (w)work-tree instead of a/b
  mnemonicPrefix = true

  # Show file renames
  renames = true

[difftool]
  prompt = false

[difftool "vscode"]
  cmd = code --wait --diff $LOCAL $REMOTE

[advice]
  # don't explain what is what when calling git status
  statusHints = false


[status]
  # show contents of untracked folders
  showUntrackedFiles = all

[tag]
  # treat tags as versions
  sort = version:refname

[versionsort]
prereleaseSuffix = -pre
prereleaseSuffix = .pre
prereleaseSuffix = -beta
prereleaseSuffix = .beta
prereleaseSuffix = -rc
prereleaseSuffix = .rc

[color "branch"]
  current = yellow reverse
  local = yellow
  remote = green

[color "diff"]
  meta = yellow bold
  frag = magenta bold
  old = red bold
  new = green bold

[color "status"]
  added = yellow
  changed = green
  untracked = cyan

