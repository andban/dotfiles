"plugins
call plug#begin('~/.vim/plugins')
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
Plug 'junegunn/fzf.vim'
Plug 'aonemd/kuroi.vim'
Plug 'airblade/vim-gitgutter'
Plug 'Raimondi/delimitMate'
Plug 'tpope/vim-fugitive'
Plug 'machakann/vim-sandwich'
"Plug 'lifepillar/vim-mucomplete'
Plug 'scrooloose/nerdtree'
Plug 'Xuyuanp/nerdtree-git-plugin'
Plug 'stephpy/vim-yaml'
Plug 'cespare/vim-toml'
Plug 'elzr/vim-json'
Plug 'plasticboy/vim-markdown'
Plug 'mxw/vim-jsx'
Plug 'pangloss/vim-javascript'
Plug 'fatih/vim-go'
Plug 'neoclide/coc.nvim', {'branch': 'release'}

call plug#end()

set nocompatible
filetype off
filetype plugin indent on


set noerrorbells                    " don't beep me bro
set number                          " display line numbers
set backspace=indent,eol,start      " this backspace is made for deleting, and i'm deleting all over you
set showcmd                         " display incomplete commans
set showmode                        " display current mode
set laststatus=2                    " always show status line
set statusline=%=%m\ %l:%c\ %P\ %f  " [$modified] $line:$column $rel_pos $filename

set lazyredraw                      " lazy redraw while executing commands
set ttyfast                         " send more data to terminal for fast redrawing

set noswapfile                      " disable swap files
set nobackup                        " don't litter
set autoread                        " auto-reload external file changes
set autowrite                       " auto-save files when needed
set encoding=utf-8                  " enable funky characters
set hidden                          " hide buffers not closing them (allows to open new files without saving the current)
au FocusLost * :wa                  " auto-save when focus lost (GUI)

"more verbose menu in command mode
set wildmenu
set wildmode=longest:full,full

"set colorcolumn=79                 " show line width
"set textwidth=79
set nowrap                          " don't wrap lines

set cursorline                      " higlight current line
set nocursorcolumn
set ruler                           " show cursor position
syntax sync minlines=256            " sync syntax highlighting window (faster)
set synmaxcol=300
set re=0                            " use old regex engine (faster)

" don't highlight current line in unfocused windows
au VimEnter,WinEnter,BufWinEnter,FocusGained,CmdwinEnter * set cul
au WinLeave,FocusLost,CmdwinLeave * set nocul


"split at bottom or right side
set splitbelow
set splitright

"enable autoindent
set autoindent
set complete-=i                     " exclude filenames in auto-complete
set complete=.,w,b,u,t
set completeopt=longest,menuone
inoremap <expr> <Tab> pumvisible() ? "\<C-n>" : "\<Tab>"
inoremap <expr> <S-Tab> pumvisible() ? "\<C-p>" : "\<S-Tab>"
inoremap <expr> <cr> pumvisible() ? "\<C-y>" : "\<C-g>u\<CR>"

set showmatch                       " show matching brackets
set smarttab                        " smarter tab handling
set tabstop=2
set shiftwidth=2
set softtabstop=2
set expandtab
set shiftround                      " indent to next tabstop
"disable auto comments on new lines
set formatoptions-=cro


set notimeout
set ttimeout
set ttimeoutlen=10


"set leader key to space
let mapleader = "\<Space>"


"
" UI
"

"use 256 colors
set t_Co=256

"set colorscheme (https://github.com/aonemd/kuroi.vim)
set background=dark
colorscheme kuroi

set guifont=Source\ Code\ Pro\ 15
set guioptions-=L


syntax enable
if has('gui_running')
  set regexpengine=1
  syntax enable
endif


"
"
"

"prune trailing whitespace on write
"autocmd! BufWritePre * :%s/\s\+$//e

"
"
"

"save buffer
nnoremap <leader>w :w<cr>

"replace word
nnoremap <leader>* :%s/\<<c-r><c-w>\>//g<left><left>

"sudo write this god damn file
cnoremap w!! %!sudo tee > /dev/null %

"turn off search highligts
nmap <leader>q :nohlsearch<cr>

"move lines
nnoremap <leader>k :m-2<cr>==
nnoremap <leader>j :m+<cr>==
xnoremap <leader>k :m-2<cr>gv=gv
xnoremap <leader>j :m'>+<cr>gv+gv

"keep selection after indent
vnoremap < <gv
vnoremap > >gv

"cycle through buffers
nnoremap <Tab> :bnext<cr>
nnoremap <S-Tab> :bprevious<cr>


"
" search
"

"enable incremental search
set incsearch

"enable search highlight
set hlsearch

"default case insensitive, switch to sensitive when first uppercase letter entered
set ignorecase
set smartcase

"fzf
nnoremap <leader>p :FZF<cr>
nnoremap <leader>o :Lines<cr>
nnoremap <leader>t :Tags<cr>
nnoremap <leader>r :Buffers<cr>

"
" Ctags
"
set tags+=.git/tags
nnoremap <leader>ct :!ctags -Rf .git/tags --tag-relative --extra=+f --exclude={.git,build,dist,node_modules,pkg} --languages=-sql<cr><cr>

"
" Fugitive
"
nnoremap <leader>ga :Git add %:p<CR><CR>
nnoremap <leader>gs :Gstatus<CR>
nnoremap <leader>gp :Gpush<CR>
nnoremap <leader>gb :Gblame<CR>

"
" GitGutter
"

nnoremap <c-N> :GitGutterNextHunk<cr>
nnoremap <c-P> :GitGutterPrevHunk<cr>
nnoremap <c-U> :GitGutterUndoHunk<cr>

"
" MUComplete
"
"set completeopt+=menuone
"set completeopt+=noselect

"no message of bleep
set shortmess+=c
set belloff+=ctrlg
let g:mucomplete#enable_auto_at_startup=1

"
" NERDTree
"

nmap <C-n> :NERDTreeToggle<CR>          " toggle file explorer
noremap <Leader>n :NERDTreeToggle<CR>
noremap <Leader>f :NERDTreeFind<CR>     " navigate to file of current buffer


"
" JavaScript
"
let g:vim_json_syntax_conceal = 1

"enable omni complete for javascript
autocmd FileType javascript setlocal omnifunc=javascriptcomplete#CompleteJS

