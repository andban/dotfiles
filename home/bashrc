# interactive or bust
[ -z "$PS1" ] && return

HISTCONTROL=ignoredups:ignorespace
shopt -s histappend
HISTSIZE=1000
HISTFILESIZE=2000

shopt -s checkwinsize

if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
    . /etc/bash_completion
fi

if [ -f /usr/local/etc/bash_completion ] && ! shopt -oq posix; then
    . /usr/local/etc/bash_completion
fi

. ~/.zsh/lib/aliases.zsh

__prompt() {
    readonly PS_SYMBOL='❯'
    readonly GIT_HAS_CHANGES='*'
    readonly GIT_IS_AHEAD='⇡'
    readonly GIT_IS_BEHIND='⇣'

    readonly FG_PATH="\[\033[1;34m\]"
    readonly FG_OK="\[\033[1;35m\]"
    readonly FG_BAD="\[\033[1;31m\]"
    readonly FG_GIT_BRANCH="\[\033[1;30m\]"
    readonly FG_GIT_STATUS="\[\033[1;36m\]"
    readonly RESET="\[\033[0m\]"

    __git_info() {
        [ -x "$(which git)" ] || return

        local branch="$(git symbolic-ref --short HEAD 2>/dev/null || git describe --tags --always 2>/dev/null)"
        [ -n "$branch" ] || return # no branch found

        [ -n "$(git status --porcelain)" ] && branch+="$GIT_HAS_CHANGES"

        local marks
        local stat="$(git status --porcelain --branch | grep '^##' | grep -o '\[.\+\]$')"
        local ahead="$(echo $stat | grep -o 'ahead [0-9]\+' | grep -o '[0-9]\+')"
        local behind="$(echo $stat | grep -o 'behind [0-9]\+' | grep -o '[0-9]\+')"
        [ -n "$behind" ] && marks+=" $GIT_IS_BEHIND"
        [ -n "$ahead" ] && marks+=" $GIT_IS_AHEAD"

        printf "$FG_GIT_BRANCH$branch$RESET   $FG_GIT_STATUS$marks$RESET"
    }

    ps1() {
        if [ $? -eq 0 ]; then
            local FG_EXIT="$FG_OK"
        else
            local FG_EXIT="$FG_BAD"
        fi

        #printf "\[\033]0;\w\007"

        PS1="\[\033]0;\w\007"
        PS1+="\n$FG_PATH\w$RESET"
        PS1+=" $(__git_info)"
        PS1+="\n$FG_EXIT$PS_SYMBOL $RESET"
    }

    PROMPT_COMMAND=ps1
}

__prompt
unset __prompt
